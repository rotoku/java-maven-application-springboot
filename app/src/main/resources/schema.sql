DROP TABLE IF EXISTS T_USER_X_ROLE;
DROP TABLE IF EXISTS T_ROLE;
DROP TABLE IF EXISTS T_USER;
DROP TABLE IF EXISTS T_TODO;

CREATE TABLE T_USER(
  USER_LOGIN VARCHAR(16) NOT NULL,
  USER_PASSWORD VARCHAR(160) NOT NULL,
  USER_NAME VARCHAR(160) NOT NULL,
  USER_EMAIL VARCHAR(160) NOT NULL,
  USER_ACTIVE CHAR(1) DEFAULT 'Y',
  USER_DELETE CHAR(1) DEFAULT 'N',
  CONSTRAINT PK_USER PRIMARY KEY(USER_LOGIN),
  CONSTRAINT CK_USER_ACTIVE CHECK (USER_ACTIVE IN ('Y', 'N')),
  CONSTRAINT CK_USER_DELETE CHECK (USER_DELETE IN ('Y', 'N'))
);

CREATE TABLE T_ROLE(
  ROLE_NAME VARCHAR(60) NOT NULL,
  ROLE_ACTIVE CHAR(1) DEFAULT 'Y',
  ROLE_DELETE CHAR(1) DEFAULT 'N',
  CONSTRAINT PK_ROLE PRIMARY KEY(ROLE_NAME),
  CONSTRAINT CK_ROLE_ACTIVE CHECK (ROLE_ACTIVE IN ('Y', 'N')),
  CONSTRAINT CK_ROLE_DELETE CHECK (ROLE_DELETE IN ('Y', 'N'))
);

CREATE TABLE T_USER_X_ROLE(
	USER_LOGIN VARCHAR(16) NOT NULL,
	ROLE_NAME VARCHAR(60) NOT NULL,
	CONSTRAINT PK_USER_X_ROLE PRIMARY KEY(USER_LOGIN, ROLE_NAME),
	CONSTRAINT FK_USER_X_ROLE_USER_LOGIN FOREIGN KEY (USER_LOGIN) REFERENCES T_USER (USER_LOGIN),
	CONSTRAINT FK_USER_X_ROLE_ROLE_NAME FOREIGN KEY (ROLE_NAME) REFERENCES T_ROLE (ROLE_NAME)
);

CREATE TABLE T_TODO(
  TODO_ID SERIAL NOT NULL,
  TODO_TITLE VARCHAR(60) NOT NULL,
  TODO_CREATED_ON TIMESTAMP NOT NULL,
  TODO_UPDATED_ON TIMESTAMP,
  TODO_CREATED_BY VARCHAR(16) NOT NULL,
  TODO_UPDATED_BY VARCHAR(16),
  TODO_STATUS CHAR(1) DEFAULT 'T',
  TODO_ACTIVE CHAR(1) DEFAULT 'Y',
  TODO_DELETE CHAR(1) DEFAULT 'N',
  CONSTRAINT PK_TODO PRIMARY KEY(TODO_ID),
  CONSTRAINT CK_TODO_STATUS CHECK (TODO_STATUS IN ('T', 'D')),
  CONSTRAINT CK_TODO_ACTIVE CHECK (TODO_ACTIVE IN ('Y', 'N')),
  CONSTRAINT CK_TODO_DELETE CHECK (TODO_DELETE IN ('Y', 'N'))
);

CREATE TABLE T_ITEM (
  ITEM_ID SERIAL NOT NULL,
  ITEM_DESCRIPTION VARCHAR(60) NOT NULL,
  TODO_ID INT NOT NULL,
  CONSTRAINT PK_ITEM PRIMARY KEY (ITEM_ID),
  CONSTRAINT FK_ITEM_TODO_ID FOREIGN KEY (TODO_ID) REFERENCES T_TODO (TODO_ID)
);
