name: Continuous Integration

on: [push]

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: app
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
      
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2
      
      - name: Maven clean and compile
        run: mvn clean compile -Dmaven.test.skip=true
  
  Test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: app
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
      
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2

      - name: Maven clean and test
        run: mvn clean test

  Quality:
    name: Quality
    runs-on: ubuntu-latest
    needs:
      - Build
      - Test
    defaults:
      run:
        shell: bash
        working-directory: app
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
      
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  Security:
    name: Security
    runs-on: ubuntu-latest
    needs:
      - Build
      - Test    
    defaults:
      run:
        shell: bash
        working-directory: app
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2

      - name: Maven clean and test
        run: mvn clean compile

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2